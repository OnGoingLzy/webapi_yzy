using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Security;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using webapi_yzy.Model;

namespace webapi_yzy.Service
{

    //实名认证服务
    public class IdVerifyService
    {
        private const String host = "https://zid.market.alicloudapi.com";
        private const String path = "/idcheck/Post";
        private const String method = "POST";
        private const String appcode = "0592b94e14d241a99c755b14a27dd552";


        //获取药品信息
        public string PostALiIdVerifyService(string cardNo, string realName, string appid)
        {
            String querys = "";
            String bodys = "cardNo=" + cardNo + "&realName=" + realName;
            String url = host + path;
            HttpWebRequest httpRequest = null;
            HttpWebResponse httpResponse = null;

            if (0 < querys.Length)
            {
                url = url + "?" + querys;
            }

            if (host.Contains("https://"))
            {
                ServicePointManager.ServerCertificateValidationCallback = new RemoteCertificateValidationCallback(CheckValidationResult);
                httpRequest = (HttpWebRequest)WebRequest.CreateDefault(new Uri(url));
            }
            else
            {
                httpRequest = (HttpWebRequest)WebRequest.Create(url);
            }
            httpRequest.Method = method;
            httpRequest.Headers.Add("Authorization", "APPCODE " + appcode);
            //根据API的要求，定义相对应的Content-Type
            httpRequest.ContentType = "application/x-www-form-urlencoded; charset=UTF-8";
            if (0 < bodys.Length)
            {
                byte[] data = Encoding.UTF8.GetBytes(bodys);
                using (Stream stream = httpRequest.GetRequestStream())
                {
                    stream.Write(data, 0, data.Length);
                }
            }
            try
            {
                httpResponse = (HttpWebResponse)httpRequest.GetResponse();
            }
            catch (WebException ex)
            {
                httpResponse = (HttpWebResponse)ex.Response;
            }

            Stream st = httpResponse.GetResponseStream();
            StreamReader reader = new StreamReader(st, Encoding.GetEncoding("utf-8"));
            string result = reader.ReadToEnd();

            if (result.Contains("\"error_code\":0,"))
            {
                if (result.Contains("\"isok\":true,"))
                {
                    return "验证成功!";
                }
                else
                {
                    return "验证失败!";
                }
            }
            else
            {
                return "验证失败!";
            }



        }
        public static bool CheckValidationResult(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors errors)
        {
            return true;
        }

    }
}