using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;


namespace webapi_yzy
{
    public class DbOperator
    {
        /// <summary>
        /// 获取Appsecret
        /// </summary>
        /// <param name="appid"></param>
        /// <returns></returns>
        public static string getAppsecret(string appid)
        {
            string sqlStr = "SELECT appsecret FROM zxcf_interface.dbo.T_zxcf_appid WITH(NOLOCK) WHERE appid = '" + appid + "'";
            DataTable dt = BaseSql.getInstance().getDataTable(sqlStr);
            if (dt == null || dt.Rows.Count == 0)
            {
                return "";
            }
            else
            {
                return dt.Rows[0]["appsecret"].ToString();
            }
        }
      /// <summary>
      /// 保存外部调用的日志
      /// </summary>
      /// <param name="appid"></param>
      /// <param name="method">方法名</param>
      /// <param name="czlx">操作类型</param>
      /// <param name="inputData">输入数据</param>
      /// <param name="outputData">输出数据</param>
      /// <param name="flag">返回值</param>
      /// <param name="flag_sm">返回值说明</param>
      /// <param name="kssj">操作的开始时间</param>
      /// <param name="jssj">操作的结束时间</param>
        public static void saveWebapiOutputLog(string appid, string method, string czlx, string inputData, string outputData, 
            int flag,string flag_sm, string kssj, string jssj)
        {
            try
            {
                ArrayList arrayList = new ArrayList();
                arrayList.Add(new UProcPara("@appid", SqlDbType.VarChar, 50, appid));
                arrayList.Add(new UProcPara("@method", SqlDbType.VarChar, 50, method));
                arrayList.Add(new UProcPara("@czlx", SqlDbType.NVarChar, 30, czlx));
                arrayList.Add(new UProcPara("@inputdata", SqlDbType.VarChar,inputData.Length*2 , inputData));
                arrayList.Add(new UProcPara("@outputdata", SqlDbType.VarChar, outputData.Length * 2, outputData));
                arrayList.Add(new UProcPara("@flag", SqlDbType.Int, 0, flag));
                arrayList.Add(new UProcPara("@flag_sm", SqlDbType.NVarChar, 200, flag_sm));
                arrayList.Add(new UProcPara("@kssj", SqlDbType.VarChar, 30, kssj));
                arrayList.Add(new UProcPara("@jssj", SqlDbType.VarChar, 30, jssj));
                DataTable dt = BaseSql.getInstance().procedure("p_webapi_output_insert_log", arrayList);
            }
            catch (Exception ex)
            {

            }
        }

        /// <summary>
        /// 调用微信接口获取openid
        /// </summary>
        /// <param name="appid"></param>
        /// <param name="secret"></param>
        /// <param name="sj_code"></param>
        public static ResultMessage GetOpenid(string appid, string secret, string js_code)
        {
            appid = "wxe7c826a1a5e00055";
            string res = "";
            ResultMessage resultmsg = new ResultMessage();
            //调用微信小程序原本的接口，获取token
            String getTokenUrl = String.Format("https://api.weixin.qq.com/sns/jscode2session?appid={0}&secret={1}&js_code={2}&grant_type={3}", appid, "425edf0bcd1ef5d7c2a32d55832f643f", js_code, "authorization_code");//url传递参数
            string beginTime = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");

            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(getTokenUrl);
            request.ContentType = "application/x-www-form-urlencoded";
            request.Method = "GET";
            using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
            {
                using (Stream stream = response.GetResponseStream())
                {
                    using (StreamReader reader = new StreamReader(stream, Encoding.UTF8))
                    {
                        String str = reader.ReadToEnd();
                        JObject Obj = JsonConvert.DeserializeObject<JObject>(str);
                        // Console.WriteLine("access_token:" + tokenObj["data"]["access_token"].ToString());

                        resultmsg.data = JsonConvert.SerializeObject(Obj);
                        res = JsonConvert.SerializeObject(Obj);
                        DbOperator.saveWebapiOutputLog(appid, "GetOpenid", "获取openid", "", res, 99, "", beginTime, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                    }
                }
            }
            resultmsg.code = 99;
            
            resultmsg.msg = "获取openid结果";
            return resultmsg;
        }
    }
}
