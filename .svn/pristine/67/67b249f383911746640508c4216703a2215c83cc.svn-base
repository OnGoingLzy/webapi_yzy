using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using webapi_yzy.Service;

namespace webapi_yzy.Controllers
{
    [Route("api/[controller]/[action]")]
    [ApiController]
    public class PublishMsgController : Controller
    {
        public async  Task<ActionResult> PublishNoPayMsg(object obj)
        {
            string beginTime = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
            //返回结果
            ResultMessage resultmsg = new ResultMessage();
            //头部信息
            string method = "";
            string appid = "";

            string body = "";
            try
            {
                PublishMsgService publishMsgService = new PublishMsgService();
                string dbRes = DbOperator.getNoPayOrder();
                JObject dbResObj = JObject.Parse(dbRes);
                if ((int)dbResObj["flag"]==99 && dbResObj["data"]!=null)
                {
                    JArray dataArr = (JArray)dbResObj["data"];
                    foreach (JObject item in dataArr)
                    {
                        string num = (string)item["num"];
                        string openid = (string)item["openid"];
                        string recipeId = (string)item["recipeId"];
                        string goodsName = (string)item["goodsName"];
                        string unitPrice = (string)item["unitPrice"];
                        string totalPrice = (string)item["totalPrice"];
                        string result = await publishMsgService.PublishNoPayMsg(openid, recipeId, goodsName, num, unitPrice, totalPrice);
                        DbOperator.saveWebapiOutputLog(appid, method, "推送用户未付款订单消息", body, result, resultmsg.code, resultmsg.msg, beginTime, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                    }
                }

                
                resultmsg.data = "已执行";
               
                return new JsonResult(resultmsg);
            }
            catch (Exception ex)
            {
                resultmsg = new ResultMessage { msg = "exception:" + ex.Message, code = -99 };
                //日志
                DbOperator.saveWebapiOutputLog(appid, method, "数据处理Exception", body, "", resultmsg.code, resultmsg.msg, beginTime, DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                return new JsonResult(resultmsg);
            }
        }
    }
}
